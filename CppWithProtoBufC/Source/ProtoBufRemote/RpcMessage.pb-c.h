/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_RpcMessage_2eproto__INCLUDED
#define PROTOBUF_C_RpcMessage_2eproto__INCLUDED

#include <framework/protobuf/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _ProtoBufRemote__RpcMessage ProtoBufRemote__RpcMessage;
typedef struct _ProtoBufRemote__RpcMessage__Call ProtoBufRemote__RpcMessage__Call;
typedef struct _ProtoBufRemote__RpcMessage__Result ProtoBufRemote__RpcMessage__Result;
typedef struct _ProtoBufRemote__RpcMessage__Parameter ProtoBufRemote__RpcMessage__Parameter;


/* --- enums --- */


/* --- messages --- */

struct  _ProtoBufRemote__RpcMessage__Call
{
  ProtobufCMessage base;
  char *service;
  char *method;
  size_t n_parameters;
  ProtoBufRemote__RpcMessage__Parameter **parameters;
  protobuf_c_boolean expects_result;
};
#define PROTO_BUF_REMOTE__RPC_MESSAGE__CALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto_buf_remote__rpc_message__call__descriptor) \
    , NULL, NULL, 0,NULL, 0 }


struct  _ProtoBufRemote__RpcMessage__Result
{
  ProtobufCMessage base;
  protobuf_c_boolean has_is_failed;
  protobuf_c_boolean is_failed;
  char *error_message;
  ProtoBufRemote__RpcMessage__Parameter *call_result;
};
#define PROTO_BUF_REMOTE__RPC_MESSAGE__RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto_buf_remote__rpc_message__result__descriptor) \
    , 0,0, NULL, NULL }


struct  _ProtoBufRemote__RpcMessage__Parameter
{
  ProtobufCMessage base;
  protobuf_c_boolean has_proto_param;
  ProtobufCBinaryData proto_param;
  char *string_param;
  protobuf_c_boolean has_int_param;
  int32_t int_param;
  protobuf_c_boolean has_uint_param;
  uint32_t uint_param;
  protobuf_c_boolean has_int64_param;
  int64_t int64_param;
  protobuf_c_boolean has_uint64_param;
  uint64_t uint64_param;
  protobuf_c_boolean has_bool_param;
  protobuf_c_boolean bool_param;
  protobuf_c_boolean has_float_param;
  float float_param;
  protobuf_c_boolean has_double_param;
  double double_param;
  protobuf_c_boolean has_is_null;
  protobuf_c_boolean is_null;
};
#define PROTO_BUF_REMOTE__RPC_MESSAGE__PARAMETER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto_buf_remote__rpc_message__parameter__descriptor) \
    , 0,{0,NULL}, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _ProtoBufRemote__RpcMessage
{
  ProtobufCMessage base;
  int32_t id;
  ProtoBufRemote__RpcMessage__Call *call_message;
  ProtoBufRemote__RpcMessage__Result *result_message;
};
#define PROTO_BUF_REMOTE__RPC_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto_buf_remote__rpc_message__descriptor) \
    , 0, NULL, NULL }


/* ProtoBufRemote__RpcMessage__Call methods */
void   proto_buf_remote__rpc_message__call__init
                     (ProtoBufRemote__RpcMessage__Call         *message);
/* ProtoBufRemote__RpcMessage__Result methods */
void   proto_buf_remote__rpc_message__result__init
                     (ProtoBufRemote__RpcMessage__Result         *message);
/* ProtoBufRemote__RpcMessage__Parameter methods */
void   proto_buf_remote__rpc_message__parameter__init
                     (ProtoBufRemote__RpcMessage__Parameter         *message);
/* ProtoBufRemote__RpcMessage methods */
void   proto_buf_remote__rpc_message__init
                     (ProtoBufRemote__RpcMessage         *message);
size_t proto_buf_remote__rpc_message__get_packed_size
                     (const ProtoBufRemote__RpcMessage   *message);
size_t proto_buf_remote__rpc_message__pack
                     (const ProtoBufRemote__RpcMessage   *message,
                      uint8_t             *out);
size_t proto_buf_remote__rpc_message__pack_to_buffer
                     (const ProtoBufRemote__RpcMessage   *message,
                      ProtobufCBuffer     *buffer);
ProtoBufRemote__RpcMessage *
       proto_buf_remote__rpc_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto_buf_remote__rpc_message__free_unpacked
                     (ProtoBufRemote__RpcMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ProtoBufRemote__RpcMessage__Call_Closure)
                 (const ProtoBufRemote__RpcMessage__Call *message,
                  void *closure_data);
typedef void (*ProtoBufRemote__RpcMessage__Result_Closure)
                 (const ProtoBufRemote__RpcMessage__Result *message,
                  void *closure_data);
typedef void (*ProtoBufRemote__RpcMessage__Parameter_Closure)
                 (const ProtoBufRemote__RpcMessage__Parameter *message,
                  void *closure_data);
typedef void (*ProtoBufRemote__RpcMessage_Closure)
                 (const ProtoBufRemote__RpcMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto_buf_remote__rpc_message__descriptor;
extern const ProtobufCMessageDescriptor proto_buf_remote__rpc_message__call__descriptor;
extern const ProtobufCMessageDescriptor proto_buf_remote__rpc_message__result__descriptor;
extern const ProtobufCMessageDescriptor proto_buf_remote__rpc_message__parameter__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_RpcMessage_2eproto__INCLUDED */
